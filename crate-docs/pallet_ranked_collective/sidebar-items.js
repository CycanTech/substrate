initSidebarItems({"enum":[["VoteRecord","Record needed for every vote."]],"mod":[["pallet","The module that hosts all the FRAME types needed to add this pallet to a runtime."],["weights","Autogenerated weights for pallet_ranked_collective"]],"struct":[["EnsureMember","Guard to ensure that the given origin is a member of the collective. The account ID of the member is the `Success` value."],["EnsureRanked","Guard to ensure that the given origin is a member of the collective. The rank of the member is the `Success` value."],["EnsureRankedMember","Guard to ensure that the given origin is a member of the collective. The pair of including both the account ID and the rank of the member is the `Success` value."],["Geometric","Vote-weight scheme where all voters get one vote plus additional votes for every excess rank they have incrementing by one vote for each excess rank. I.e.:"],["Linear","Vote-weight scheme where all voters get one vote plus an additional vote for every excess rank they have. I.e.:"],["MemberRecord","Record needed for every member."],["Tally","Aggregated votes for an ongoing poll by members of the ranked collective."],["Unit","Vote-weight scheme where all voters get one vote regardless of rank."]],"trait":[["GetMaxVoters","Trait for getting the maximum number of voters for a given rank."]],"type":[["MemberIndex","A number of members."],["PollIndexOf",""],["Rank","Member rank."],["TallyOf",""],["Votes","Votes."]]});